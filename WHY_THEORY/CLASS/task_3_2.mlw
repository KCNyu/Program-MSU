module Task32

    use import int.Int

    let rec ghost sqrt_g (x : int) : int
        requires {x >= 0}
        variant {x}
        ensures {result * result <= x < (result + 1) * (result + 1)}
    =
        if x = 0 then 0
        else let r = sqrt_g (x - 1) in
            if (r + 1) * (r + 1) = x then r + 1
            else r

    let sqrt_gr_zero (x : int)
        requires {x >= 0}
    =
        let ghost r2d2 = sqrt_g x in
        assert {exists r : int. r * r <= x < (r + 1) * (r + 1)}
end