theory Task
    use import int.Int

    predicate p (x : int) (y1 : int) (y2 : int) (y3 : int) =
        (
            (
                y3 = x /\ 
                y2 <= x
            ) 
            \/ 
            (
                y3 = x * x /\ 
                x <= y2 <= x * x
            )
        )
        /\
        (y1 = y2 * x)
    
    predicate w (x : int) (y1 : int) (y3 : int) =
        (
            (y1 <= x * x * x) /\
            (
                y3 = x \/
                y3 = x * x
            )
        )
    predicate u (y1_i : int) (y1_ii : int) (y3_i : int) (y3_ii : int)=
        (
            (y1_ii > y1_i) \/
            (
                (y1_ii = y1_i) /\
                (y3_ii > y3_i)
            )
        )
        
    goal SA:
        forall x : int, y1 : int, y2 : int, y3 : int.
        (x > 1) -> (p x x 1 x)
    goal ATA:
        forall x : int, y1 : int, y2 : int, y3 : int.
        (
            (x > 1) /\ 
            (p x y1 y2 y3) /\ 
            (y2 < y3)
        ) 
        ->
        (p x (y1 + x) (y2 + 1) y3)
    goal AFTA:
        forall x : int, y1 : int, y2 : int, y3 : int.
        (
            (x > 1) /\ 
            (p x y1 y2 y3) /\ 
            (y2 >= y3) /\
            (x = y3)
        )
        ->
        (p x y1 y2 y1)
    goal ATAU: 
        forall x : int, y1 : int, y2 : int, y3 : int.
        (
            (x > 1) /\ 
            (p x y1 y2 y3) /\ 
            (y2 < y3) 
        )
        ->
        (u y1 (y1 + x) y3 y3)
    goal AFTAU:
        forall x : int, y1 : int, y2 : int, y3 : int.
        (
            (x > 1) /\ 
            (p x y1 y2 y3) /\ 
            (y2 >= y3) /\
            (x = y3)
        )
        ->
        (u y1 y1 y3 y1)
    goal W:
        forall x : int, y1 : int, y2 : int, y3 : int.
        (
            (x > 1) /\ 
            (p x y1 y2 y3)
        ) 
        ->
        (w x y1 y3)
end